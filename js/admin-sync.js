// Script de synchronisation am√©lior√© pour l'administration
console.log("admin-sync.js charg√© - D√©marrage du diagnostic");

// Fonction pour forcer le rechargement des donn√©es
function forceReloadData() {
    console.log("Tentative de for√ßage du rechargement des donn√©es...");
    
    // Donn√©es minimales de secours 
    const backupData = [
        {
            "id": 1,
            "name": "Li-Cycle",
            "location": "Kingston, Ontario, Canada",
            "country": "Canada",
            "coordinates": [44.2312, -76.4860],
            "status": "Op√©rationnel",
            "production": "10 000+ tonnes de masse noire par an",
            "processing": "Spoke & Hub Technologies - Proc√©d√© hydrom√©tallurgique",
            "notes": "Produit de la masse noire √† partir de batteries lithium-ion usag√©es, hub aux √âtats-Unis en pause.",
            "website": "https://li-cycle.com/"
        },
        {
            "id": 2,
            "name": "Lithion Technologies",
            "location": "Saint-Bruno-de-Montarville, Qu√©bec, Canada",
            "country": "Canada",
            "coordinates": [45.5366, -73.3718],
            "status": "Op√©rationnel",
            "production": "10 000-20 000 tonnes de batteries par an",
            "processing": "Proc√©d√© hydrom√©tallurgique en deux √©tapes",
            "notes": "Produit de la masse noire, usine d'hydrom√©tallurgie pour mat√©riaux avanc√©s pr√©vue pour 2026.",
            "website": "https://www.lithiontechnologies.com/"
        }
    ];
    
    // Charger directement depuis le fichier JSON
    fetch('data/refineries.json?nocache=' + Date.now())
        .then(response => response.json())
        .then(data => {
            console.log("Donn√©es r√©cup√©r√©es avec succ√®s:", data);
            
            if (data && data.refineries && Array.isArray(data.refineries)) {
                console.log("Format de donn√©es valide:", data.refineries.length, "installations");
                
                // Mettre √† jour les donn√©es
                localStorage.setItem('lithiumRefineries', JSON.stringify(data.refineries));
                localStorage.setItem('dashboardVersion', data.version || 'force-reload-' + Date.now());
                localStorage.setItem('lastDataUpdateTimestamp', Date.now().toString());
                
                // Mettre √† jour l'affichage
                window.refineries = data.refineries;
                if (typeof window.displayRefineryTable === 'function') {
                    window.displayRefineryTable();
                }
                
                // Afficher un message de succ√®s
                showRepairMessage("Donn√©es r√©cup√©r√©es avec succ√®s: " + data.refineries.length + " installations");
            } else {
                throw new Error("Format de donn√©es invalide dans refineries.json");
            }
        })
        .catch(error => {
            console.error("Erreur lors du chargement du fichier JSON:", error);
            
            // Utiliser les donn√©es de secours
            console.log("Utilisation des donn√©es de secours");
            localStorage.setItem('lithiumRefineries', JSON.stringify(backupData));
            localStorage.setItem('dashboardVersion', 'backup-' + Date.now());
            localStorage.setItem('lastDataUpdateTimestamp', Date.now().toString());
            
            // Mettre √† jour l'affichage
            window.refineries = backupData;
            if (typeof window.displayRefineryTable === 'function') {
                window.displayRefineryTable();
            }
            
            showRepairMessage("Donn√©es de secours charg√©es. Veuillez r√©essayer apr√®s avoir effac√© le cache du navigateur.");
        });
}

// Fonction pour v√©rifier l'√©tat des donn√©es du tableau
function checkTableData() {
    console.log("V√©rification de l'√©tat des donn√©es du tableau...");
    
    // V√©rifier si l'√©l√©ment du tableau existe
    const tableBody = document.getElementById('refineries-table-body');
    if (!tableBody) {
        console.error("√âl√©ment 'refineries-table-body' non trouv√©!");
        showRepairMessage("Erreur: √âl√©ment du tableau non trouv√©. V√©rifiez le HTML.");
        return false;
    }
    
    // V√©rifier si nous avons des donn√©es dans localStorage
    const savedData = localStorage.getItem('lithiumRefineries');
    if (!savedData) {
        console.warn("Aucune donn√©e dans localStorage");
        return false;
    }
    
    try {
        const refineries = JSON.parse(savedData);
        if (!Array.isArray(refineries) || refineries.length === 0) {
            console.warn("Donn√©es localStorage invalides ou vides");
            return false;
        }
        
        console.log("Donn√©es localStorage valides:", refineries.length, "installations");
        return true;
    } catch (e) {
        console.error("Erreur lors de l'analyse des donn√©es localStorage:", e);
        return false;
    }
}

// Fonction pour afficher un message de diagnostic/r√©paration
function showRepairMessage(message) {
    console.log("Message de diagnostic:", message);
    
    // Chercher d'abord une notification existante
    let notification = document.getElementById('table-notification');
    
    // Si elle n'existe pas, cr√©er une nouvelle
    if (!notification) {
        const tableContainer = document.querySelector('.table-container');
        if (tableContainer) {
            notification = document.createElement('div');
            notification.id = 'repair-notification';
            notification.style.padding = '15px';
            notification.style.margin = '20px 0';
            notification.style.backgroundColor = '#f9edbe';
            notification.style.border = '1px solid #f0c36d';
            notification.style.borderRadius = '4px';
            notification.style.fontWeight = 'bold';
            
            tableContainer.parentNode.insertBefore(notification, tableContainer);
        }
    }
    
    if (notification) {
        notification.textContent = message;
        notification.style.display = 'block';
    }
}

// Fonction pour d√©marrer le bouton de r√©paration
function createRepairButton() {
    console.log("Cr√©ation du bouton de r√©paration d'urgence...");
    
    const container = document.querySelector('.panel .btn-group');
    if (container) {
        const repairButton = document.createElement('button');
        repairButton.textContent = 'üîß R√©parer les donn√©es';
        repairButton.style.backgroundColor = '#ff9800';
        repairButton.style.fontWeight = 'bold';
        repairButton.onclick = function() {
            // Effacer toutes les donn√©es localStorage
            localStorage.removeItem('lithiumRefineries');
            localStorage.removeItem('dashboardVersion');
            localStorage.removeItem('lastDataUpdateTimestamp');
            
            // Forcer le rechargement des donn√©es
            forceReloadData();
        };
        
        container.appendChild(repairButton);
        console.log("Bouton de r√©paration ajout√©");
    } else {
        console.warn("Conteneur de boutons non trouv√©");
    }
}

// Lancer le diagnostic au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    console.log("Lancement du diagnostic des donn√©es...");
    
    // Attendre un peu que les autres scripts se chargent
    setTimeout(function() {
        // V√©rifier l'√©tat des donn√©es
        const dataOK = checkTableData();
        
        // Cr√©er le bouton de r√©paration dans tous les cas
        createRepairButton();
        
        // Si les donn√©es semblent corrompues, proposer une r√©paration automatique
        if (!dataOK) {
            showRepairMessage("Probl√®me d√©tect√© avec les donn√©es. Cliquez sur 'üîß R√©parer les donn√©es' pour r√©soudre le probl√®me.");
        }
    }, 1000);
    
    // Exposer la fonction de r√©paration globalement
    window.forceReloadData = forceReloadData;
});